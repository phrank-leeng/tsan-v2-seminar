@inproceedings{cormac,
	author = {Flanagan, Cormac and Freund, Stephen},
	year = {2009},
	month = {06},
	pages = {121-133},
	title = {FastTrack: Efficient and Precise Dynamic Race Detection},
	volume = {53},
	journal = {Communications of The ACM - CACM},
	doi = {10.1145/1542476.1542490}
}

@article{sulzmann,
	author       = {Martin Sulzmann and
	Kai Stadtm{\"{u}}ller},
	title        = {Efficient, Near Complete and Often Sound Hybrid Dynamic Data Race
	Prediction (extended version)},
	journal      = {CoRR},
	volume       = {abs/2004.06969},
	year         = {2020},
	url          = {https://arxiv.org/abs/2004.06969},
	eprinttype    = {arXiv},
	eprint       = {2004.06969},
	timestamp    = {Tue, 21 Apr 2020 16:51:52 +0200},
	biburl       = {https://dblp.org/rec/journals/corr/abs-2004-06969.bib},
	bibsource    = {dblp computer science bibliography, https://dblp.org}
}

@misc{SWB-1830643851,
	title = {Distributed Computing and Intelligent Technology : 19th International Conference, ICDCIT 2023, Bhubaneswar, India, January 18â€“22, 2023, Proceedings},
	series = {Lecture Notes in Computer Science ; 13776},
	editor = {Anisur Rahaman Molla and Gokarna Sharma and Pradeep Kumar and Sanjay Rawat},
	address = {Cham},
	publisher = {Springer Nature Switzerland},
	year = {2023},
	edition = {1st ed. 2023.},
	isbn = {9783031248481},
	size = {1 Online-Ressource(XXIII, 376 p. 174 illus., 130 illus. in color.)},
	URL = {https://link.springer.com/book/10.1007/978-3-031-24848-1},
}


@article{FAVA2020102473,
	title = {Ready, set, Go!: Data-race detection and the Go language},
	journal = {Science of Computer Programming},
	volume = {195},
	pages = {102473},
	year = {2020},
	issn = {0167-6423},
	doi = {https://doi.org/10.1016/j.scico.2020.102473},
	url = {https://www.sciencedirect.com/science/article/pii/S0167642320300836},
	author = {Daniel Schnetzer Fava and Martin Steffen},
	keywords = {Concurrency, Synchronization, Message passing, Data-race detection, Golang},
	abstract = {Data races are often discussed in the context of lock acquisition and release, with race-detection algorithms routinely relying on vector clocks as a means of capturing the relative ordering of events from different threads. In this paper, we present a data-race detector for a language with channel communication as its sole synchronization primitive, and provide a semantics directly tied to the happens-before relation, thus forging the notion of vector clocks.}
}



